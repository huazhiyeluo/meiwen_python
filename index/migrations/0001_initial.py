# Generated by Django 4.2.6 on 2023-10-13 07:24

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TsArticleGushi',
            fields=[
                ('article_id', models.AutoField(db_comment='文章ID', primary_key=True, serialize=False)),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('cid1', models.SmallIntegerField(db_comment='分类ID')),
                ('cid2', models.SmallIntegerField(db_comment='子分类ID')),
                ('title', models.CharField(db_comment='标题', max_length=100)),
                ('tags', models.CharField(db_comment='标签', max_length=50)),
                ('cover', models.CharField(db_comment='图片路径', max_length=100)),
                ('count_comment', models.SmallIntegerField(db_comment='评论数')),
                ('count_view', models.SmallIntegerField(db_comment='浏览数')),
                ('is_recommend', models.IntegerField(db_comment='是否推荐')),
                ('is_audit', models.IntegerField(db_comment='是否审核')),
                ('is_mul_page', models.IntegerField(db_comment='是否多页')),
                ('addtime', models.IntegerField(db_comment='新增时间')),
            ],
            options={
                'db_table': 'ts_article_gushi',
                'db_table_comment': '文章',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsArticleMeiwen',
            fields=[
                ('article_id', models.AutoField(db_comment='文章ID', primary_key=True, serialize=False)),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('cid1', models.SmallIntegerField(db_comment='分类ID')),
                ('cid2', models.SmallIntegerField(db_comment='子分类ID')),
                ('title', models.CharField(db_comment='标题', max_length=100)),
                ('tags', models.CharField(db_comment='标签', max_length=50)),
                ('cover', models.CharField(db_comment='图片路径', max_length=100)),
                ('count_comment', models.SmallIntegerField(db_comment='评论数')),
                ('count_view', models.SmallIntegerField(db_comment='浏览数')),
                ('is_recommend', models.IntegerField(db_comment='是否推荐')),
                ('is_audit', models.IntegerField(db_comment='是否审核')),
                ('is_mul_page', models.IntegerField(db_comment='是否多页')),
                ('addtime', models.IntegerField(db_comment='新增时间')),
            ],
            options={
                'db_table': 'ts_article_meiwen',
                'db_table_comment': '文章',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsArticleZuowen',
            fields=[
                ('article_id', models.AutoField(db_comment='文章ID', primary_key=True, serialize=False)),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('cid1', models.SmallIntegerField(db_comment='分类ID')),
                ('cid2', models.SmallIntegerField(db_comment='子分类ID')),
                ('title', models.CharField(db_comment='标题', max_length=100)),
                ('tags', models.CharField(db_comment='标签', max_length=50)),
                ('cover', models.CharField(db_comment='图片路径', max_length=100)),
                ('count_comment', models.SmallIntegerField(db_comment='评论数')),
                ('count_view', models.SmallIntegerField(db_comment='浏览数')),
                ('is_recommend', models.IntegerField(db_comment='是否推荐')),
                ('is_audit', models.IntegerField(db_comment='是否审核')),
                ('is_mul_page', models.IntegerField(db_comment='是否多页')),
                ('addtime', models.IntegerField(db_comment='新增时间')),
            ],
            options={
                'db_table': 'ts_article_zuowen',
                'db_table_comment': '文章',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsBook',
            fields=[
                ('book_id', models.AutoField(db_comment='书本ID', primary_key=True, serialize=False)),
                ('uid', models.IntegerField(db_comment='创建者uid')),
                ('cid1', models.SmallIntegerField(db_comment='分类ID')),
                ('cid2', models.SmallIntegerField(db_comment='子分类ID')),
                ('title', models.CharField(db_comment='名称', max_length=100)),
                ('author', models.CharField(db_comment='作者', max_length=50)),
                ('cover', models.CharField(db_comment='图片', max_length=255)),
                ('desc', models.CharField(db_comment='描述', max_length=2000)),
                ('tags', models.CharField(db_comment='标签', max_length=128)),
                ('count_comment', models.SmallIntegerField(db_comment='评论数')),
                ('count_view', models.SmallIntegerField(db_comment='浏览数')),
                ('is_recommend', models.IntegerField(db_comment='是否推荐')),
                ('meta_title', models.CharField(db_comment='SEO的网页标题', max_length=50)),
                ('meta_keywords', models.CharField(db_comment='关键字', max_length=255)),
                ('meta_description', models.CharField(db_comment='描述', max_length=255)),
                ('addtime', models.IntegerField(db_comment='新增时间')),
            ],
            options={
                'db_table': 'ts_book',
                'db_table_comment': '书名',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsBookChapter',
            fields=[
                ('link_id', models.AutoField(db_comment='关联ID', primary_key=True, serialize=False)),
                ('chapter_id', models.SmallIntegerField(db_comment='章节ID')),
                ('book_id', models.SmallIntegerField(db_comment='书本ID')),
                ('title', models.CharField(db_comment='标题', max_length=100)),
                ('tags', models.CharField(db_comment='标签', max_length=50)),
                ('count_comment', models.SmallIntegerField(db_comment='评论数')),
                ('count_view', models.SmallIntegerField(db_comment='浏览数')),
                ('addtime', models.IntegerField(db_comment='新增时间')),
            ],
            options={
                'db_table': 'ts_book_chapter',
                'db_table_comment': '小说章节表',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsCategory',
            fields=[
                ('cid', models.SmallAutoField(db_comment='分类ID', primary_key=True, serialize=False)),
                ('pcid', models.SmallIntegerField(db_comment='上级ID')),
                ('type', models.SmallIntegerField(db_comment='1书本 2美文 3故事 4作文')),
                ('title', models.CharField(db_comment='分类名称', max_length=20)),
                ('spider_title', models.CharField(db_comment='分类名称(爬虫)', max_length=20)),
                ('route_name', models.CharField(db_comment='路由名称', max_length=50)),
                ('spider_route_name', models.CharField(db_comment='路由名称(爬虫)', max_length=50)),
                ('meta_title', models.CharField(db_comment='SEO的网页标题', max_length=50)),
                ('meta_keywords', models.CharField(db_comment='关键字', max_length=255)),
                ('meta_description', models.CharField(db_comment='描述', max_length=255)),
                ('sort', models.SmallIntegerField(db_comment='排序')),
                ('is_delete', models.SmallIntegerField(db_comment='0 正常 1 删除')),
            ],
            options={
                'db_table': 'ts_category',
                'db_table_comment': '文章分类',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsComment',
            fields=[
                ('comment_id', models.AutoField(db_comment='评论ID', primary_key=True, serialize=False)),
                ('article_id', models.IntegerField(db_comment='文章ID')),
                ('type', models.IntegerField(db_comment='类型 1图书 2美文 3故事 4作文')),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('content', models.TextField(db_comment='评论内容')),
                ('addtime', models.IntegerField(db_comment='评论时间')),
                ('is_audit', models.IntegerField(db_comment='是否审核')),
            ],
            options={
                'db_table': 'ts_comment',
                'db_table_comment': '文章评论',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsLinks',
            fields=[
                ('link_id', models.AutoField(db_comment='友链ID', primary_key=True, serialize=False)),
                ('sitename', models.CharField(db_comment='站点名', max_length=100)),
                ('url', models.CharField(db_comment='链接地址', max_length=100)),
                ('keywords', models.CharField(db_comment='关键字', max_length=100)),
                ('start_time', models.IntegerField(db_comment='开始时间')),
                ('end_time', models.IntegerField(db_comment='结束时间')),
                ('sort', models.SmallIntegerField(db_comment='排序')),
                ('is_delete', models.IntegerField(db_comment='是否删除 0 默认 1删除')),
            ],
            options={
                'db_table': 'ts_links',
                'db_table_comment': '友链管理',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsTag',
            fields=[
                ('tag_id', models.AutoField(db_comment='自增ID', primary_key=True, serialize=False)),
                ('tagname', models.CharField(db_comment='标签名称', max_length=32, unique=True)),
                ('count_user', models.IntegerField(db_comment='统计用户标签')),
                ('count_book', models.IntegerField(db_comment='统计书籍标签')),
                ('count_book_chapter', models.IntegerField(db_comment='统计书籍章节标签')),
                ('count_weibo', models.IntegerField(db_comment='统计书籍章节标签')),
                ('count_article', models.IntegerField(db_comment='统计文章标签')),
                ('is_enable', models.IntegerField(db_comment='是否可用')),
                ('uptime', models.IntegerField(db_comment='更新时间')),
            ],
            options={
                'db_table': 'ts_tag',
                'db_table_comment': '标签表',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsTagArticleIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article_id', models.IntegerField(db_comment='帖子ID')),
                ('tag_id', models.IntegerField(db_comment='标签ID')),
            ],
            options={
                'db_table': 'ts_tag_article_index',
                'db_table_comment': '文章标签关联',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsTagBookChapterIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chapter_id', models.IntegerField(db_comment='帖子ID')),
                ('tag_id', models.IntegerField(db_comment='标签ID')),
            ],
            options={
                'db_table': 'ts_tag_book_chapter_index',
                'db_table_comment': '书籍章节标签关联',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsTagBookIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('book_id', models.IntegerField(db_comment='帖子ID')),
                ('tag_id', models.IntegerField(db_comment='标签ID')),
            ],
            options={
                'db_table': 'ts_tag_book_index',
                'db_table_comment': '书籍标签关联',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsTagUserIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('tag_id', models.IntegerField(db_comment='标签ID')),
            ],
            options={
                'db_table': 'ts_tag_user_index',
                'db_table_comment': '用户标签关联',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsTagWeiboIndex',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('weibo_id', models.IntegerField(db_comment='帖子ID')),
                ('tag_id', models.IntegerField(db_comment='标签ID')),
            ],
            options={
                'db_table': 'ts_tag_weibo_index',
                'db_table_comment': '书籍标签关联',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('openid', models.CharField(db_comment='openid', max_length=64, unique=True)),
                ('email', models.CharField(db_comment='用户email', max_length=64)),
                ('phone', models.CharField(db_comment='手机号', max_length=64)),
                ('password', models.CharField(db_comment='用户密码', max_length=32)),
                ('salt', models.CharField(db_comment='加点盐', max_length=32)),
                ('code', models.CharField(db_comment='邮箱验证码', max_length=32)),
            ],
            options={
                'db_table': 'ts_user',
                'db_table_comment': 'ts用户',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsUserFollow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('uid_follow', models.IntegerField(db_comment='被关注的用户ID')),
                ('addtime', models.IntegerField(db_comment='添加时间')),
            ],
            options={
                'db_table': 'ts_user_follow',
                'db_table_comment': '用户关注跟随',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsUserGb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reid', models.IntegerField(db_comment='回复留言ID')),
                ('uid', models.IntegerField(db_comment='留言用户ID')),
                ('touid', models.IntegerField(db_comment='被留言用户ID')),
                ('content', models.TextField(db_comment='内容')),
                ('addtime', models.IntegerField(db_comment='新增时间')),
            ],
            options={
                'db_table': 'ts_user_gb',
                'db_table_comment': '留言表',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsUserInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(db_comment='用户ID', unique=True)),
                ('roleid', models.SmallIntegerField(db_comment='角色ID')),
                ('username', models.CharField(db_comment='用户名', max_length=32)),
                ('gender', models.IntegerField(db_comment='性别 1男 2女 0 未知')),
                ('email', models.CharField(db_comment='Email邮箱', max_length=64)),
                ('phone', models.CharField(db_comment='电话号码', max_length=11)),
                ('photo', models.CharField(db_comment='头像', max_length=100)),
                ('signed', models.CharField(db_comment='签名', max_length=100)),
                ('address', models.CharField(db_comment='地址', max_length=64)),
                ('blog', models.CharField(db_comment='博客', max_length=32)),
                ('about', models.CharField(db_comment='关于我', max_length=255)),
                ('allscore', models.IntegerField(db_comment='所有获得的总积分')),
                ('count_score', models.IntegerField(db_comment='统计积分')),
                ('count_follow', models.IntegerField(db_comment='统计用户跟随的')),
                ('count_followed', models.IntegerField(db_comment='统计用户被跟随的')),
                ('is_admin', models.IntegerField(db_comment='是否是管理员')),
                ('is_audit', models.IntegerField(db_comment='是否审核')),
                ('is_verify', models.IntegerField(db_comment='0未验证1验证')),
                ('is_verifyphone', models.IntegerField(db_comment='手机号验证0未验证1验证')),
                ('is_renzheng', models.IntegerField(db_comment='是否认证0未认证1认证')),
                ('is_recommend', models.IntegerField(db_comment='是否推荐')),
                ('reg_time', models.IntegerField(db_comment='注册时间')),
                ('reg_ip', models.CharField(db_comment='注册IP', max_length=32)),
                ('login_time', models.IntegerField(db_comment='登陆时间')),
                ('login_ip', models.CharField(db_comment='登陆IP', max_length=32)),
            ],
            options={
                'db_table': 'ts_user_info',
                'db_table_comment': '用户信息',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsUserOpen',
            fields=[
                ('uid', models.AutoField(db_comment='用户ID', primary_key=True, serialize=False)),
                ('sid', models.IntegerField(db_comment='连接网站（0.普通注册 1.QQ | 2.微博 |3百度）')),
                ('openid', models.CharField(db_comment='openid', max_length=64)),
                ('access_token', models.CharField(db_comment='access_token', max_length=128)),
                ('uptime', models.IntegerField(db_comment='更新时间')),
            ],
            options={
                'db_table': 'ts_user_open',
                'db_table_comment': '连接登录Open设置',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsWeibo',
            fields=[
                ('weibo_id', models.AutoField(db_comment='自增唠叨ID', primary_key=True, serialize=False)),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('content', models.TextField(db_comment='内容')),
                ('count_comment', models.IntegerField(db_comment='评论数')),
                ('photo', models.CharField(db_comment='图片', max_length=100)),
                ('is_audit', models.IntegerField(db_comment='是否审核')),
                ('addtime', models.IntegerField(blank=True, db_comment='新增时间', null=True)),
                ('uptime', models.IntegerField(db_comment='最后更新时间')),
            ],
            options={
                'db_table': 'ts_weibo',
                'db_table_comment': '唠叨',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TsWeiboComment',
            fields=[
                ('commentid', models.AutoField(db_comment='自增评论ID', primary_key=True, serialize=False)),
                ('weibo_id', models.IntegerField(db_comment='唠叨ID')),
                ('uid', models.IntegerField(db_comment='用户ID')),
                ('touid', models.IntegerField(db_comment='回复用户ID')),
                ('content', models.TextField(db_comment='内容')),
                ('is_read', models.IntegerField(db_comment='是否已阅')),
                ('is_audit', models.IntegerField(db_comment='是否审核')),
                ('addtime', models.IntegerField(db_comment='新增时间')),
            ],
            options={
                'db_table': 'ts_weibo_comment',
                'db_table_comment': '唠叨回复',
                'managed': False,
            },
        ),
    ]
